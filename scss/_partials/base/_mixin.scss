// Calculer l'espacement des lettres comme dans XD
@mixin letter-spacing($spacing) {
  letter-spacing: ($spacing / 1000) * 1em;
}

// Rendre responsive des font-size de manière fluide
// font-size responsive @include fluid-type(valeurMobile, Valeurdesktop);
@mixin fluid-type($min-font-size: 16px, $max-font-size: 21px, $lower-range: 420px, $upper-range: 900px) {

  font-size: calc(#{$min-font-size} + #{(($max-font-size / ($max-font-size * 0 + 1)) - ($min-font-size / ($min-font-size * 0 + 1)))} * ( (100vw - #{$lower-range}) / #{(($upper-range / ($upper-range * 0 + 1)) - ($lower-range / ($lower-range * 0 + 1)))}));

  @media screen and (max-width: $lower-range) {
    font-size: $min-font-size;
  }
  @media screen and (min-width: $upper-range){
    font-size: $max-font-size;
  }
}

// Rendre responsive des line-height de manière fluide
//line-height  @include fluid-line-height(valeurMobile, Valeurdesktop);
@mixin fluid-line-height($min-value: 1.5, $max-value: 1.8, $min-w: 400px, $max-w: 1300px, $steps: 20) {
  $step : ($max-w - $min-w ) / $steps;
  $increase : ($max-value - $min-value ) / $steps;
  @for $i from 0 through $steps {
    @media (min-width : calc(#{$min-w} + (#{$i} * #{$step}))) {
      line-height : $min-value + $i * $increase;
    }
  }
}


